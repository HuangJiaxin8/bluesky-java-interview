const e=JSON.parse('{"key":"v-c2ae335c","path":"/java/Redis.html","title":"Redis","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-08-08T00:00:00.000Z","category":["java"],"tag":["redis"],"description":"Redis 基础 为什么使用缓存 提高读写性能 Redis读写性能比Mysql好很多，把Mysql的热点数据缓存到Redis，减轻Mysql的压力。 什么是Redis？ 开源的、基于内存、多种数据结构的存储系统 可以作为数据库、缓存、消息中间件 支持的数据结构有： string、hash、list、set、zset(sorted set)、除此之外，还有bitmap、hyperlogLog和地理空间 Redis的优点有哪些？（为什么使用Redis） c语言实现，效率高 纯内存操作 单线程模型，可以避免上下文切换 非阻塞IO复用模型 丰富的数据结构 说一下Redis的优缺点？ 优点： 速度快，基于内存 支持丰富的数据结构 有持久化存储方案 高可用，支持集群 缺点： 内存数据库，内存的瓶颈 为什么选用Redis而不是Memcache？ Redis支持多种数据结构，Memcache不支持 Redis支持虚拟内存，物理内存用完之后，把内存放到磁盘上 Redis有持久化机制，Memcache一挂掉后，数据就没了 Redis原生支持集群，Memcache没原生集群，需要依赖客户端实现 Redis的数据类型以及使用场景 常用的数据类型： String 最常规的get/set操作，value可以是String也可以是数字。 使用场景：微博粉丝数 Hash value存放结构化的对象，比较方便操作其中某个值 List 可以做一些简单的消息队列功能，最新回复功能 Set Set是不重复的集合，利用交集并集差集，计算共同好友，共同爱好。 zset/Sorted Set Sorted Set 多了一个权重参数Score，集合中的元素按Score排列。可以做排行榜应用，也可以来做一些延时任务 不常用的数据类型： Bitmap HyperlogLog Geospatial Redis 缓存（集中式缓存）和JVM缓存（本地缓存）有什么区别 本地缓存，没有成熟的超时机制，而Redis缓存是第三方中间件，提供着成熟的超时机制。 本地缓存只能用于单进程，而Redis缓存可以用于分布式。 本地缓存不支持持久化，进程结束，缓存就失效。而Redis缓存支持持久化。 什么情况下可能会导致 Redis 阻塞？ 内部： Redis主机的CPU过载 数据持久化占用资源过多 外部： 网络问题 内存问题 Redis 如何解决 key 冲突？ 后一个key会覆盖前一个key，建议取名的时候key就要分开好 一个字符串类型的值能存储最大容量是多少 512M Redis如何做大量数据插入 Redis2.6开始,redis-cli支持一种新的被称之为pipe mode的新模式,用于执行大量数据插入的工作。 Redis 哈希槽","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/bluesky-java-interview/java/Redis.html"}],["meta",{"property":"og:site_name","content":"BlueSky的八股文"}],["meta",{"property":"og:title","content":"Redis"}],["meta",{"property":"og:description","content":"Redis 基础 为什么使用缓存 提高读写性能 Redis读写性能比Mysql好很多，把Mysql的热点数据缓存到Redis，减轻Mysql的压力。 什么是Redis？ 开源的、基于内存、多种数据结构的存储系统 可以作为数据库、缓存、消息中间件 支持的数据结构有： string、hash、list、set、zset(sorted set)、除此之外，还有bitmap、hyperlogLog和地理空间 Redis的优点有哪些？（为什么使用Redis） c语言实现，效率高 纯内存操作 单线程模型，可以避免上下文切换 非阻塞IO复用模型 丰富的数据结构 说一下Redis的优缺点？ 优点： 速度快，基于内存 支持丰富的数据结构 有持久化存储方案 高可用，支持集群 缺点： 内存数据库，内存的瓶颈 为什么选用Redis而不是Memcache？ Redis支持多种数据结构，Memcache不支持 Redis支持虚拟内存，物理内存用完之后，把内存放到磁盘上 Redis有持久化机制，Memcache一挂掉后，数据就没了 Redis原生支持集群，Memcache没原生集群，需要依赖客户端实现 Redis的数据类型以及使用场景 常用的数据类型： String 最常规的get/set操作，value可以是String也可以是数字。 使用场景：微博粉丝数 Hash value存放结构化的对象，比较方便操作其中某个值 List 可以做一些简单的消息队列功能，最新回复功能 Set Set是不重复的集合，利用交集并集差集，计算共同好友，共同爱好。 zset/Sorted Set Sorted Set 多了一个权重参数Score，集合中的元素按Score排列。可以做排行榜应用，也可以来做一些延时任务 不常用的数据类型： Bitmap HyperlogLog Geospatial Redis 缓存（集中式缓存）和JVM缓存（本地缓存）有什么区别 本地缓存，没有成熟的超时机制，而Redis缓存是第三方中间件，提供着成熟的超时机制。 本地缓存只能用于单进程，而Redis缓存可以用于分布式。 本地缓存不支持持久化，进程结束，缓存就失效。而Redis缓存支持持久化。 什么情况下可能会导致 Redis 阻塞？ 内部： Redis主机的CPU过载 数据持久化占用资源过多 外部： 网络问题 内存问题 Redis 如何解决 key 冲突？ 后一个key会覆盖前一个key，建议取名的时候key就要分开好 一个字符串类型的值能存储最大容量是多少 512M Redis如何做大量数据插入 Redis2.6开始,redis-cli支持一种新的被称之为pipe mode的新模式,用于执行大量数据插入的工作。 Redis 哈希槽"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"blueSky"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2023-08-08T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-08T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"blueSky\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"线程模型","slug":"线程模型","link":"#线程模型","children":[]},{"level":2,"title":"持久化","slug":"持久化","link":"#持久化","children":[]},{"level":2,"title":"过期键问题","slug":"过期键问题","link":"#过期键问题","children":[]},{"level":2,"title":"内存淘汰","slug":"内存淘汰","link":"#内存淘汰","children":[]},{"level":2,"title":"数据一致性","slug":"数据一致性","link":"#数据一致性","children":[{"level":3,"title":"答案一：延时双删","slug":"答案一-延时双删","link":"#答案一-延时双删","children":[]},{"level":3,"title":"答案二： 更新与读取操作进行异步串行化","slug":"答案二-更新与读取操作进行异步串行化","link":"#答案二-更新与读取操作进行异步串行化","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]},{"level":2,"title":"Redis如何实现消息队列","slug":"redis如何实现消息队列","link":"#redis如何实现消息队列","children":[]},{"level":2,"title":"Redis 实现分布式锁","slug":"redis-实现分布式锁","link":"#redis-实现分布式锁","children":[]},{"level":2,"title":"如何利用Redis实现分布式Session？","slug":"如何利用redis实现分布式session","link":"#如何利用redis实现分布式session","children":[]}],"git":{},"readingTime":{"minutes":32.41,"words":9723},"filePathRelative":"java/Redis.md","localizedDate":"August 8, 2023","excerpt":"<h1> Redis</h1>\\n<h2> 基础</h2>\\n<ul>\\n<li>\\n<p>为什么使用缓存</p>\\n<ul>\\n<li>提高读写性能</li>\\n<li>Redis读写性能比Mysql好很多，把Mysql的热点数据缓存到Redis，减轻Mysql的压力。</li>\\n</ul>\\n</li>\\n<li>\\n<p>什么是Redis？</p>\\n<ul>\\n<li>开源的、基于内存、多种数据结构的存储系统</li>\\n<li>可以作为数据库、缓存、消息中间件</li>\\n<li>支持的数据结构有：\\n<ul>\\n<li>string、hash、list、set、zset(sorted set)、除此之外，还有bitmap、hyperlogLog和地理空间</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Redis的优点有哪些？（为什么使用Redis）</p>\\n<ul>\\n<li>c语言实现，效率高</li>\\n<li>纯内存操作</li>\\n<li>单线程模型，可以避免上下文切换</li>\\n<li>非阻塞IO复用模型</li>\\n<li>丰富的数据结构</li>\\n</ul>\\n</li>\\n<li>\\n<p>说一下Redis的优缺点？</p>\\n<ul>\\n<li>优点：\\n<ul>\\n<li>速度快，基于内存</li>\\n<li>支持丰富的数据结构</li>\\n<li>有持久化存储方案</li>\\n<li>高可用，支持集群</li>\\n</ul>\\n</li>\\n<li>缺点：\\n<ul>\\n<li>内存数据库，内存的瓶颈</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>为什么选用Redis而不是Memcache？</p>\\n<ul>\\n<li>Redis支持多种数据结构，Memcache不支持</li>\\n<li>Redis支持虚拟内存，物理内存用完之后，把内存放到磁盘上</li>\\n<li>Redis有持久化机制，Memcache一挂掉后，数据就没了</li>\\n<li>Redis原生支持集群，Memcache没原生集群，需要依赖客户端实现</li>\\n</ul>\\n</li>\\n<li>\\n<p>Redis的数据类型以及使用场景</p>\\n<ul>\\n<li>常用的数据类型：\\n<ul>\\n<li>String\\n<ul>\\n<li>最常规的get/set操作，value可以是String也可以是数字。</li>\\n<li>使用场景：微博粉丝数</li>\\n</ul>\\n</li>\\n<li>Hash\\n<ul>\\n<li>value存放结构化的对象，比较方便操作其中某个值</li>\\n</ul>\\n</li>\\n<li>List\\n<ul>\\n<li>可以做一些简单的消息队列功能，最新回复功能</li>\\n</ul>\\n</li>\\n<li>Set\\n<ul>\\n<li>Set是不重复的集合，利用交集并集差集，计算共同好友，共同爱好。</li>\\n</ul>\\n</li>\\n<li>zset/Sorted Set\\n<ul>\\n<li>Sorted Set 多了一个权重参数Score，集合中的元素按Score排列。可以做排行榜应用，也可以来做一些延时任务</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>不常用的数据类型：\\n<ul>\\n<li>Bitmap</li>\\n<li>HyperlogLog</li>\\n<li>Geospatial</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Redis 缓存（集中式缓存）和JVM缓存（本地缓存）有什么区别</p>\\n<ul>\\n<li>本地缓存，没有成熟的超时机制，而Redis缓存是第三方中间件，提供着成熟的超时机制。</li>\\n<li>本地缓存只能用于单进程，而Redis缓存可以用于分布式。</li>\\n<li>本地缓存不支持持久化，进程结束，缓存就失效。而Redis缓存支持持久化。</li>\\n</ul>\\n</li>\\n<li>\\n<p>什么情况下可能会导致 Redis 阻塞？</p>\\n<ul>\\n<li>内部：\\n<ul>\\n<li>Redis主机的CPU过载</li>\\n<li>数据持久化占用资源过多</li>\\n</ul>\\n</li>\\n<li>外部：\\n<ul>\\n<li>网络问题</li>\\n<li>内存问题</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Redis 如何解决 key 冲突？</p>\\n<ul>\\n<li>后一个key会覆盖前一个key，建议取名的时候key就要分开好</li>\\n</ul>\\n</li>\\n<li>\\n<p>一个字符串类型的值能存储最大容量是多少</p>\\n<ul>\\n<li>512M</li>\\n</ul>\\n</li>\\n<li>\\n<p>Redis如何做大量数据插入</p>\\n<ul>\\n<li>Redis2.6开始,redis-cli支持一种新的被称之为pipe mode的新模式,用于执行大量数据插入的工作。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Redis 哈希槽</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
